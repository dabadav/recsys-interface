WITH EmotionalAnswers AS (
    SELECT
        eqp.PATIENT_ID,
        DATE(ea.CREATION_TIME) AS ANSWER_DATE,
        ea.EMOTIONAL_ANSWER,
        ea.CREATION_TIME,
        ROW_NUMBER() OVER (PARTITION BY eqp.PATIENT_ID, DATE(ea.CREATION_TIME) ORDER BY ea.EMOTIONAL_ANSWER_ID) AS answer_rank
    FROM emotional_question_patient eqp
    JOIN emotional_answer ea
        ON eqp.EMOTIONAL_QUESTION_PATIENT_ID = ea.EMOTIONAL_QUESTION_PATIENT_ID
),

SessionData AS (
    SELECT
        pp.PATIENT_ID,
        sp.SESSION_ID,
        sp.PRESCRIPTION_ID,
        pp.PROTOCOL_ID,
        prt.PROTOCOL_TYPE,
        pp.WEEKDAY,
        pp.SESSION_DURATION AS PRESCRIBED_SESSION_DURATION,
        pp.AR_MODE,
        DATE(sp.STARTING_DATE) AS SESSION_DATE,
        sp.STARTING_DATE,
        sp.ENDING_DATE,
        sp.STATUS
    FROM session_{rgs_mode} sp
    JOIN prescription_{rgs_mode} pp
        ON sp.PRESCRIPTION_ID = pp.PRESCRIPTION_ID
    JOIN protocol as pr
        ON pp.PROTOCOL_ID = pr.PROTOCOL_ID
    JOIN protocol_type as prt
        ON pr.PROTOCOL_TYPE_ID = prt.PROTOCOL_TYPE_ID
    WHERE sp.STATUS IN ('CLOSED', 'ABORTED')
)

SELECT
    p.PATIENT_ID,
    p.HOSPITAL_ID,
    p.PARETIC_SIDE,
    p.UPPER_EXTREMITY_TO_TRAIN,
    p.HAND_RAISING_CAPACITY,
    p.COGNITIVE_FUNCTION_LEVEL,
    p.HAS_HEMINEGLIGENCE,
    p.GENDER,
    p.SKIN_COLOR,
    TIMESTAMPDIFF(YEAR, p.BIRTH_DATE, sd.SESSION_DATE) AS AGE,
    p.VIDEOGAME_EXP,
    p.COMPUTER_EXP,
    p.COMMENTS,
    p.PTN_HEIGHT_CM,
    p.ARM_SIZE_CM,

    sd.SESSION_DATE,
    ea1.EMOTIONAL_ANSWER AS EMOTIONAL_ANSWER_1,
    ea2.EMOTIONAL_ANSWER AS EMOTIONAL_ANSWER_2,
    ea3.EMOTIONAL_ANSWER AS EMOTIONAL_ANSWER_3,

    sd.SESSION_ID,
    CAST(sd.PROTOCOL_ID AS SIGNED) AS PROTOCOL_ID,
    HOUR(sd.STARTING_DATE) AS STARTING_HOUR,
    CASE
        WHEN HOUR(sd.STARTING_DATE) BETWEEN 5 AND 11 THEN 'MORNING'
        WHEN HOUR(sd.STARTING_DATE) BETWEEN 12 AND 17 THEN 'AFTERNOON'
        WHEN HOUR(sd.STARTING_DATE) BETWEEN 18 AND 21 THEN 'EVENING'
        ELSE 'NIGHT'
    END AS STARTING_TIME_CATEGORY,

    sd.STATUS,

    sd.PROTOCOL_TYPE,
    sd.AR_MODE,
    sd.WEEKDAY,
    sd.PRESCRIBED_SESSION_DURATION,
    r.SESSION_DURATION,

    CASE
        WHEN sd.PRESCRIBED_SESSION_DURATION > 0 THEN r.SESSION_DURATION / sd.PRESCRIBED_SESSION_DURATION
        ELSE NULL
    END AS ADHERENCE,

    r.TOTAL_SUCCESS,
    r.TOTAL_ERRORS,
    r.SCORE

FROM patient p
LEFT JOIN SessionData sd ON p.PATIENT_ID = sd.PATIENT_ID
LEFT JOIN (
    SELECT
        SESSION_ID,
        MAX(CASE WHEN RECORDING_KEY = 'sessionDuration(seconds)' THEN RECORDING_VALUE END) AS SESSION_DURATION,
        MAX(CASE WHEN RECORDING_KEY = 'totalSuccess' THEN RECORDING_VALUE END) AS TOTAL_SUCCESS,
        MAX(CASE WHEN RECORDING_KEY = 'totalErrors' THEN RECORDING_VALUE END) AS TOTAL_ERRORS,
        MAX(CASE WHEN RECORDING_KEY = 'score' THEN RECORDING_VALUE END) AS SCORE
    FROM recording_{rgs_mode}
    GROUP BY SESSION_ID
) r ON sd.SESSION_ID = r.SESSION_ID

LEFT JOIN (SELECT PATIENT_ID, ANSWER_DATE, EMOTIONAL_ANSWER FROM EmotionalAnswers WHERE answer_rank = 1) ea1
    ON p.PATIENT_ID = ea1.PATIENT_ID AND sd.SESSION_DATE = ea1.ANSWER_DATE
LEFT JOIN (SELECT PATIENT_ID, ANSWER_DATE, EMOTIONAL_ANSWER FROM EmotionalAnswers WHERE answer_rank = 2) ea2
    ON p.PATIENT_ID = ea2.PATIENT_ID AND sd.SESSION_DATE = ea2.ANSWER_DATE
LEFT JOIN (SELECT PATIENT_ID, ANSWER_DATE, EMOTIONAL_ANSWER FROM EmotionalAnswers WHERE answer_rank = 3) ea3
    ON p.PATIENT_ID = ea3.PATIENT_ID AND sd.SESSION_DATE = ea3.ANSWER_DATE

WHERE p.PATIENT_ID IN :patient_ids
ORDER BY p.PATIENT_ID, sd.SESSION_DATE;
